{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Project Overview The proposed Memory Game is a simple serious game that will further enable researchers of Vibrant Minds to assess the cognitive state of its users. The biggest draw for the creation of this game (aside from naturally fitting well into the current library of games in terms of gameplay) was due to popular request of the Vibrant Minds player community. The game will be simple to understand and provide clear and immediate feedback to players on their performance; this game will also be accessible on a variety of different device platforms. This game is aimed towards older healthy adults as well as older adults with mild cognitive impairments. The user base will likely have a subset of users with various mild cognitive impairments (including early stage dementia) and/or physical impairments (such as color blindness, arthritis etc.). This game uses the existing Vibrant Minds API to store in game performance metrics of users. This game is to be hosted on the Vibrant Minds website as part of their existing suite of games. Sprint 1 Requirements Document: User Stories Glossary Storyboards, UI Navigation Diagram and Mockups Research Software-Design Document: High Level Design Project Management Terminology Profile : A players home page where they may access the Vibrant Minds Game suite, their previous game session details or fill out pending surveys. Player/User : A person playing the game. Staff/Researcher : A person that has access to organized performance metrics. Performance metrics : Game data metrics that are recorded and collected using the Vibrant-Minds API. i.e. User IDs and their recorded scores, times, amount of levels played for the memory game, etc. Time : The amount of time a user is on a single level of the game. Cards : Virtual two sided rectangular game pieces, of which there is a uniform image on one side and a somewhat unique image on the other (in reference to other cards); each card has at least one other counterpart with which they share the same unique secondary image. Game Board : Virtual rectangular board that contains an even amount of cards. Device : A thing made or adapted for a particular purpose, especially a piece of mechanical or electronic equipment. Examples include Web Enabled Smartphones, Tablets, Desktop etc. Score : The score of a user on a single level of the game. Increases by a fixes amount for every correct pairing made and decreases by a fixed amount for every incorrect pairing made in that level. Level : A single round of the Memory Game. This is one cycle of generating the board and clearing all of the cards. Game : The Memory Game. In some contexts, can refer to a single level, as defined above. Serious Game : A serious game or applied game is a game (any game, not necessarily the Memory Game) designed for a primary purpose other than pure entertainment UI Flow Diagram Technical Resources Backend: Vibrant Minds API + npm + Django Frontend: D3.js + Phaser Reference Template: Source code for Vibrant Minds' Mahjong Similar Products Vibrant Minds Mahjong A current game in the Vibrant Minds game suite that incorporates the Vibrant Minds API and all the other technology to be used by the Memory Game. In combination with the source code that was provided to us, this could be used as reference on how to apply the Vibrant Minds API and connect it with our game, as well as a reference on how to apply features such as score and pausing. HelpfulGames' Memory A web based memory game that incorporates multi-level design, scores, accuracy and more. Could be used as visual reference as this is similar to what we would create in terms of how gameplay is seen on the front end. Mark Rolich's Memory Game A Javascript based implementation of Memory Game This open source project can serve as a visual and technical reference when designing the interactions and gameplay aspect of our game. Citations Oxford English Dictionary","title":"Overview"},{"location":"#project-overview","text":"The proposed Memory Game is a simple serious game that will further enable researchers of Vibrant Minds to assess the cognitive state of its users. The biggest draw for the creation of this game (aside from naturally fitting well into the current library of games in terms of gameplay) was due to popular request of the Vibrant Minds player community. The game will be simple to understand and provide clear and immediate feedback to players on their performance; this game will also be accessible on a variety of different device platforms. This game is aimed towards older healthy adults as well as older adults with mild cognitive impairments. The user base will likely have a subset of users with various mild cognitive impairments (including early stage dementia) and/or physical impairments (such as color blindness, arthritis etc.). This game uses the existing Vibrant Minds API to store in game performance metrics of users. This game is to be hosted on the Vibrant Minds website as part of their existing suite of games.","title":"Project Overview"},{"location":"#sprint-1","text":"Requirements Document: User Stories Glossary Storyboards, UI Navigation Diagram and Mockups Research Software-Design Document: High Level Design Project Management","title":"Sprint 1"},{"location":"#terminology","text":"Profile : A players home page where they may access the Vibrant Minds Game suite, their previous game session details or fill out pending surveys. Player/User : A person playing the game. Staff/Researcher : A person that has access to organized performance metrics. Performance metrics : Game data metrics that are recorded and collected using the Vibrant-Minds API. i.e. User IDs and their recorded scores, times, amount of levels played for the memory game, etc. Time : The amount of time a user is on a single level of the game. Cards : Virtual two sided rectangular game pieces, of which there is a uniform image on one side and a somewhat unique image on the other (in reference to other cards); each card has at least one other counterpart with which they share the same unique secondary image. Game Board : Virtual rectangular board that contains an even amount of cards. Device : A thing made or adapted for a particular purpose, especially a piece of mechanical or electronic equipment. Examples include Web Enabled Smartphones, Tablets, Desktop etc. Score : The score of a user on a single level of the game. Increases by a fixes amount for every correct pairing made and decreases by a fixed amount for every incorrect pairing made in that level. Level : A single round of the Memory Game. This is one cycle of generating the board and clearing all of the cards. Game : The Memory Game. In some contexts, can refer to a single level, as defined above. Serious Game : A serious game or applied game is a game (any game, not necessarily the Memory Game) designed for a primary purpose other than pure entertainment","title":"Terminology"},{"location":"#ui-flow-diagram","text":"","title":"UI Flow Diagram"},{"location":"#technical-resources","text":"Backend: Vibrant Minds API + npm + Django Frontend: D3.js + Phaser Reference Template: Source code for Vibrant Minds' Mahjong","title":"Technical Resources"},{"location":"#similar-products","text":"Vibrant Minds Mahjong A current game in the Vibrant Minds game suite that incorporates the Vibrant Minds API and all the other technology to be used by the Memory Game. In combination with the source code that was provided to us, this could be used as reference on how to apply the Vibrant Minds API and connect it with our game, as well as a reference on how to apply features such as score and pausing. HelpfulGames' Memory A web based memory game that incorporates multi-level design, scores, accuracy and more. Could be used as visual reference as this is similar to what we would create in terms of how gameplay is seen on the front end. Mark Rolich's Memory Game A Javascript based implementation of Memory Game This open source project can serve as a visual and technical reference when designing the interactions and gameplay aspect of our game.","title":"Similar Products"},{"location":"#citations","text":"Oxford English Dictionary","title":"Citations"},{"location":"design/","text":"High Level Design The memory game will use the Django (python based) web framework to deliver the memory game to the clients. The game itself (and its classes) is written in JavaScript, and utilizes the Phaser HTML5 game framework to define the core elements of the game. The game will be designed to send player's game data to the Vibrant Minds server, via the Vibrant Minds API: Data Repository. Class Diagram Component Diagram","title":"Software Design"},{"location":"design/#high-level-design","text":"The memory game will use the Django (python based) web framework to deliver the memory game to the clients. The game itself (and its classes) is written in JavaScript, and utilizes the Phaser HTML5 game framework to define the core elements of the game. The game will be designed to send player's game data to the Vibrant Minds server, via the Vibrant Minds API: Data Repository.","title":"High Level Design"},{"location":"design/#class-diagram","text":"","title":"Class Diagram"},{"location":"design/#component-diagram","text":"","title":"Component Diagram"},{"location":"projectm/","text":"Project Plan and Task Assignment This page contains our general project plans with an overview of what tasks need to be done by when and the assignment of tasks. The project plan follows the four major deadlines of Sprint 1, Sprint 2, Sprint 3 and Sprint 4. Team Roles We will assign roles based on each team members specialty and abilities. We will assign tasks to specific roles depending what kind of task it is, while also making sure work load is balanced between roles. * Front End : Creating the interactable portion of the project that users see and interact with. This is the Memory Game itself. * Back End : Working with the Vibrant-Minds API. * Floaters : Members who can do both. Will assign these members to support other roles depending on task allocation and timeframes. # Participant Roles 1 Sandy Huang Front End 2 Nevil Kandathil Back End 3 Kyle Androschuk Back End 4 Nebye Berhe Floater 5 Kevin Nguyen Front End 6 Calvin Chomyc Floater Roles subjected to change as the project progresses Story Map Project Plan Sprint 1: Due September 28th Tasks Assigned To Complete By Create Project Overview Nebye September 28 Create Project Glossary Nebye September 28 Create Story Boards/Wire Frames Nebye September 28 Create User Stories Calvin/Nevil/Sandy September 28 List Technical Resources Nebye September 28 List Similar Open-Source Products Nebye September 28 Create High Level Design Diagrams Kyle September 28 Create Project Plan Calvin/Kevin/Sandy September 28 Create Story Map Everyone September 28 Create Project Roles Kevin September 28 Record Reading Minutes Sandy September 28 Sprint 2: Due October 19th Tasks Assigned To Complete By Address Sprint 1 Feedback Everyone October 5 Update Design Document Everyone October 5 Update Requirements Document Everyone October 5 US 1.01 Nebye October 12 US 1.02 Calvin October 12 US 1.03 Calvin October 12 US 1.04 Kevin October 12 US 1.05 Kevin October 19 US 1.09 Nebye October 19 US 1.10 Sandy October 12 US 1.11 Sandy October 12 US 1.12 Kevin October 12 US 1.13 Kyle October 12 US 1.14 Kyle October 12 US 2.01 Calvin October 19 US 2.02 Calvin October 19 US 2.03 Nevil October 19 US 2.04 Nevil October 19 US 2.05 Nebye October 19 US 3.01 Sandy October 5 US 3.02 Nevil October 12 Sprint 3: Due November 16th Tasks Assigned To Complete By Address Sprint 2 Feedback Everyone October 26 US 2.06 Calvin November 9 US 2.07 Nevil November 9 US 2.08 Kyle November 16 US 1.06 Kevin November 2 US 1.07 Kevin November 2 US 1.08 Kyle November 9 US 1.15 Nebye November 16 US 1.16 Sandy November 16 US 1.17 Sandy November 9 Sprint 4: Due November 27th Tasks Assigned To Complete By Address Sprint 3 Feedback Everyone Nov 23 US 1.18 Kevin Nov 23 US 2.09 Nebye Nov 23","title":"Project Management"},{"location":"projectm/#project-plan-and-task-assignment","text":"This page contains our general project plans with an overview of what tasks need to be done by when and the assignment of tasks. The project plan follows the four major deadlines of Sprint 1, Sprint 2, Sprint 3 and Sprint 4.","title":"Project Plan and Task Assignment"},{"location":"projectm/#team-roles","text":"We will assign roles based on each team members specialty and abilities. We will assign tasks to specific roles depending what kind of task it is, while also making sure work load is balanced between roles. * Front End : Creating the interactable portion of the project that users see and interact with. This is the Memory Game itself. * Back End : Working with the Vibrant-Minds API. * Floaters : Members who can do both. Will assign these members to support other roles depending on task allocation and timeframes. # Participant Roles 1 Sandy Huang Front End 2 Nevil Kandathil Back End 3 Kyle Androschuk Back End 4 Nebye Berhe Floater 5 Kevin Nguyen Front End 6 Calvin Chomyc Floater Roles subjected to change as the project progresses","title":"Team Roles"},{"location":"projectm/#story-map","text":"","title":"Story Map"},{"location":"projectm/#project-plan","text":"","title":"Project Plan"},{"location":"projectm/#sprint-1-due-september-28th","text":"Tasks Assigned To Complete By Create Project Overview Nebye September 28 Create Project Glossary Nebye September 28 Create Story Boards/Wire Frames Nebye September 28 Create User Stories Calvin/Nevil/Sandy September 28 List Technical Resources Nebye September 28 List Similar Open-Source Products Nebye September 28 Create High Level Design Diagrams Kyle September 28 Create Project Plan Calvin/Kevin/Sandy September 28 Create Story Map Everyone September 28 Create Project Roles Kevin September 28 Record Reading Minutes Sandy September 28","title":"Sprint 1: Due September 28th"},{"location":"projectm/#sprint-2-due-october-19th","text":"Tasks Assigned To Complete By Address Sprint 1 Feedback Everyone October 5 Update Design Document Everyone October 5 Update Requirements Document Everyone October 5 US 1.01 Nebye October 12 US 1.02 Calvin October 12 US 1.03 Calvin October 12 US 1.04 Kevin October 12 US 1.05 Kevin October 19 US 1.09 Nebye October 19 US 1.10 Sandy October 12 US 1.11 Sandy October 12 US 1.12 Kevin October 12 US 1.13 Kyle October 12 US 1.14 Kyle October 12 US 2.01 Calvin October 19 US 2.02 Calvin October 19 US 2.03 Nevil October 19 US 2.04 Nevil October 19 US 2.05 Nebye October 19 US 3.01 Sandy October 5 US 3.02 Nevil October 12","title":"Sprint 2: Due October 19th"},{"location":"projectm/#sprint-3-due-november-16th","text":"Tasks Assigned To Complete By Address Sprint 2 Feedback Everyone October 26 US 2.06 Calvin November 9 US 2.07 Nevil November 9 US 2.08 Kyle November 16 US 1.06 Kevin November 2 US 1.07 Kevin November 2 US 1.08 Kyle November 9 US 1.15 Nebye November 16 US 1.16 Sandy November 16 US 1.17 Sandy November 9","title":"Sprint 3: Due November 16th"},{"location":"projectm/#sprint-4-due-november-27th","text":"Tasks Assigned To Complete By Address Sprint 3 Feedback Everyone Nov 23 US 1.18 Kevin Nov 23 US 2.09 Nebye Nov 23","title":"Sprint 4: Due November 27th"},{"location":"requirements/","text":"1. User/Participant 1.01. As a user , I want the game to follow regular MemoryCards rules, so that it is easily recognizable and easy to play. Acceptance criteria: Open the Memory Game Confirm that the game board appears, with every card face down Click on a card, and it flips face up Click on a second card, and it flips face up If the two cards have matching images, they are cleared from the board. Otherwise, they turn face down. Repeat steps 4 and 5 until the board is cleared Confirm that the game is won when the board is cleared. 1.02. As a user , I want feedback when cards are cleared so that I can easily tell that a match was found. Acceptance criteria: Open the Memory Game Click on a card Click on another card with the same image Confirm that the cards disappear with an animation and a sound effect 1.03. As a user , I want feedback when I select two different cards so that I can easily tell that they failed to match. Acceptance criteria: Open the Memory Game Click on a card Click on another card with the a different image Confirm that the cards are deselected and a sound effect is played, indicating a failed match Confirm that the cards stay face up for 2 seconds, then flip face down 1.04. As a user , I want to be informed when I win the game so that I know the game is finished. Acceptance criteria: Open the Memory Game Clear all of the cards on the board. Once the board is cleared, confirm that the victory window is displayed. 1.05. As a user , I want to be able to play a new game after finishing one so that I can continue playing without reopening the game. Acceptance criteria: Open the Memory Game Clear all of the cards on the board. Click on the \u201cContinue to next level\u201d button on the victory window. Confirm that the victory window closes and a new game starts. 1.06. As a user , I want to play MemoryCards with increasing numbers of cards as the levels progress, so that the difficulty increases and I am cognitively stimulated. Acceptance criteria: Open the Memory Game Finish the first level and proceed to the next one Finish more levels Confirm that the victory window closes and a new game starts. Confirm that the number of cards increases further, up to a maximum (unknown number, depends on how many cards fit on-screen) 1.07. As a user , I want card images to change into more complex image sets with less obvious (but still recognizable) differences as levels progress, so that the difficulty increases and I am cognitively stimulated. Acceptance criteria: Open the Memory Game Finish some levels Confirm that different sets of images are eventually used, with the images being more complex compared to the previous sets 1.08. As a user , I want the game to be made easier if I take too long to find a match, so that I can avoid frustration. Acceptance criteria: Open the Memory Game Fail to find a match for a period of 1 minute Confirm that the user is sent to a modified version of the level Confirm that the new version of the level has the same number of cards Confirm that the new version of the level has less complex images 1.09. As a user , I want to be able to identify myself in front of the game, so that my performance metrics can be encoded and stored. Acceptance criteria: Login to the Vibrant Minds website Open the Memory Game Confirm that the page displays our username, showing we are logged in 1.10. As a user , I want to view instructions so that I can understand how the game is played. Acceptance criteria: Open the Memory Game Click on the \u201cHow to play?\u201d button Confirm that the game\u2019s instructions are displayed 1.11. As a user , I want significant contrast between visible elements so that I can easily identify them. Acceptance criteria: Open the Memory Game Confirm that we can easily distinguish every element, with them being visually different compared to each other 1.12. As a user , I want non-gameplay elements to be at the top of the screen, so that I do not accidentally click/tap on them. Acceptance criteria: Open the Memory Game Confirm that the top of the screen is not a part of the game board Confirm that the top of the screen contains the \u201cHow to play?\u201d button, mute/unmute button, pause button, and score Confirm that the entire lower portion of the game screen is a part of the game board 1.13. As a user , I want the game to support multiple devices, including my laptop, tablet, and mobile phone, so that I can easily access the game. Acceptance criteria: Open the Memory Game from a desktop computer Confirm that the game runs properly Repeat steps 1 and 2 using a laptop, tablet, and mobile phone 1.14. As a user , I want the game to support modern web browsers so that I can easily access it without installing any programs. Acceptance criteria: Open the Memory Game in the latest stable version of Google Chrome Confirm that the game runs properly Repeat steps 1 and 2 for Firefox, Edge, and Safari 1.15. As a user , I want to be able to pause during the game so that I can take short breaks from looking at the screen and playing. Acceptance criteria: Open the Memory Game Click the pause button on the screen. Confirm that the game is paused, and a resume button appears. Confirm that the game does not count down the timer for moving to an easier version of the level (normally happens after waiting for a minute). Click the resume button. Confirm that the game is unpaused. 1.16. As a user , I want to be able to exit the game so that I can stop playing. Acceptance criteria: Open the Memory Game Click the pause button on the screen. Confirm that a prompt to exit the game appears. Click on the exit button. Confirm that the game exits. 1.17. As a user , I want to be able to mute or unmute sound so that I can play the game without any audible distractions. Acceptance criteria: Open the Memory Game Click the sound button on the screen. Confirm that the sound is muted. Click the sound button on the screen again. Confirm that the sound is unmuted. 1.18. As a user , I want to keep track of my game score so that I am aware of how well I am performing during each game. Acceptance criteria: Open the Memory Game. Confirm that a scoreboard appears on the screen. Confirm that the score increases by 10 when a match is made. Confirm that the score decreases by 2 when a match fails. 2. Researcher/Admin 2.01. As a researcher , I want performance data to be collected using the Vibrant-Minds APIs so that I can view the statistics of all of the games in a central system. Acceptance criteria: Have users complete rounds of the Memory Game. Confirm that all of the statistics are sent to the server using the Vibrant-Minds APIs. (As opposed to some other method.) 2.02. As a researcher , I want to collect the ID of the participant so that I can identify the participant. Acceptance criteria: Have users complete rounds of the Memory Game. Confirm that the data received from these games includes the participant ID. 2.03. As a researcher , I want to collect the date and time of each game by participant ID so that I can determine when each user played each game. Acceptance criteria: Have users complete rounds of the Memory Game. Confirm that the data received from these games includes the date and time. 2.04. As a researcher , I want to know whether the game finished, so that I can check whether the user left partway through the game. Acceptance criteria: Have users complete rounds of the Memory Game. Confirm that the data received from these games includes an indicator that the game finished. Have users open the Memory Game, but close it without finishing the game. Confirm that the data received from these games includes an indicator that the game did not finish. 2.05. As a researcher , I want to know the start and finish times for each game, so that I can measure how much time the participant took. Acceptance criteria: Have users complete rounds of the Memory Game. Confirm that the data received from these games includes the start and finish times. 2.06. As a researcher , I want to track which difficulty level the participant reached, so that I can measure the level of their performance. Acceptance criteria: Have users complete rounds of the Memory Game. Confirm that the data received from these games includes the difficulty level reached. 2.07. As a researcher , I want to collect the number of correct and incorrect matches so that I can determine the accuracy in the user\u2019s play. Acceptance criteria: Have users complete rounds of the Memory Game. Confirm that the data received from these games includes the number of correct and incorrect matches. 2.08. As a researcher , I want to track the time when each click (or tap) occurs so that I can recognize the pace of their play and understand their cognitive functionality better. Acceptance criteria: Have users complete rounds of the Memory Game. Confirm that the data received from these games includes the time of each click. 2.09. As a researcher , I want to track the score for each game so that I can determine the accuracy in the user\u2019s play. Acceptance criteria: Have users complete rounds of the Memory Game. Confirm that the data received from these games includes the scores. 3. Technical User/Developer 3.01. As a developer , I want the Memory Game code to be based on the Mahjong code, so that the code retains consistency between the games. Acceptance criteria: Confirm that we are starting with the Mahjong code and modifying it. Confirm that the final code structure bears resemblance to the Mahjong code. 3.02. As a developer , I want the card images to be easy to replace, so that we can swap them out when we draw higher quality assets. Acceptance criteria: Confirm that the image resources are in a separate directory from the game code. Confirm that replacing the image files replaces their appearances in-game. MoSCoW Prioritization Must have: - 1.01, 1.02, 1.03, 1.04, 1.05, 1.09, 1.10, 1.13, 1.14, 2.01, 2.02, 2.03, 2.04 Should have: - 1.06, 1.07, 1.08, 1.11, 1.12, 1.15, 1.16, 1.17, 2.05, 2.06, 2.07, 2.08, 3.01, 3.02 Could have: - 1.18, 2.09 Won\u2019t do: - None. I think we should be able to complete all of the current requirements.","title":"Requirements"},{"location":"requirements/#1-userparticipant","text":"1.01. As a user , I want the game to follow regular MemoryCards rules, so that it is easily recognizable and easy to play. Acceptance criteria: Open the Memory Game Confirm that the game board appears, with every card face down Click on a card, and it flips face up Click on a second card, and it flips face up If the two cards have matching images, they are cleared from the board. Otherwise, they turn face down. Repeat steps 4 and 5 until the board is cleared Confirm that the game is won when the board is cleared. 1.02. As a user , I want feedback when cards are cleared so that I can easily tell that a match was found. Acceptance criteria: Open the Memory Game Click on a card Click on another card with the same image Confirm that the cards disappear with an animation and a sound effect 1.03. As a user , I want feedback when I select two different cards so that I can easily tell that they failed to match. Acceptance criteria: Open the Memory Game Click on a card Click on another card with the a different image Confirm that the cards are deselected and a sound effect is played, indicating a failed match Confirm that the cards stay face up for 2 seconds, then flip face down 1.04. As a user , I want to be informed when I win the game so that I know the game is finished. Acceptance criteria: Open the Memory Game Clear all of the cards on the board. Once the board is cleared, confirm that the victory window is displayed. 1.05. As a user , I want to be able to play a new game after finishing one so that I can continue playing without reopening the game. Acceptance criteria: Open the Memory Game Clear all of the cards on the board. Click on the \u201cContinue to next level\u201d button on the victory window. Confirm that the victory window closes and a new game starts. 1.06. As a user , I want to play MemoryCards with increasing numbers of cards as the levels progress, so that the difficulty increases and I am cognitively stimulated. Acceptance criteria: Open the Memory Game Finish the first level and proceed to the next one Finish more levels Confirm that the victory window closes and a new game starts. Confirm that the number of cards increases further, up to a maximum (unknown number, depends on how many cards fit on-screen) 1.07. As a user , I want card images to change into more complex image sets with less obvious (but still recognizable) differences as levels progress, so that the difficulty increases and I am cognitively stimulated. Acceptance criteria: Open the Memory Game Finish some levels Confirm that different sets of images are eventually used, with the images being more complex compared to the previous sets 1.08. As a user , I want the game to be made easier if I take too long to find a match, so that I can avoid frustration. Acceptance criteria: Open the Memory Game Fail to find a match for a period of 1 minute Confirm that the user is sent to a modified version of the level Confirm that the new version of the level has the same number of cards Confirm that the new version of the level has less complex images 1.09. As a user , I want to be able to identify myself in front of the game, so that my performance metrics can be encoded and stored. Acceptance criteria: Login to the Vibrant Minds website Open the Memory Game Confirm that the page displays our username, showing we are logged in 1.10. As a user , I want to view instructions so that I can understand how the game is played. Acceptance criteria: Open the Memory Game Click on the \u201cHow to play?\u201d button Confirm that the game\u2019s instructions are displayed 1.11. As a user , I want significant contrast between visible elements so that I can easily identify them. Acceptance criteria: Open the Memory Game Confirm that we can easily distinguish every element, with them being visually different compared to each other 1.12. As a user , I want non-gameplay elements to be at the top of the screen, so that I do not accidentally click/tap on them. Acceptance criteria: Open the Memory Game Confirm that the top of the screen is not a part of the game board Confirm that the top of the screen contains the \u201cHow to play?\u201d button, mute/unmute button, pause button, and score Confirm that the entire lower portion of the game screen is a part of the game board 1.13. As a user , I want the game to support multiple devices, including my laptop, tablet, and mobile phone, so that I can easily access the game. Acceptance criteria: Open the Memory Game from a desktop computer Confirm that the game runs properly Repeat steps 1 and 2 using a laptop, tablet, and mobile phone 1.14. As a user , I want the game to support modern web browsers so that I can easily access it without installing any programs. Acceptance criteria: Open the Memory Game in the latest stable version of Google Chrome Confirm that the game runs properly Repeat steps 1 and 2 for Firefox, Edge, and Safari 1.15. As a user , I want to be able to pause during the game so that I can take short breaks from looking at the screen and playing. Acceptance criteria: Open the Memory Game Click the pause button on the screen. Confirm that the game is paused, and a resume button appears. Confirm that the game does not count down the timer for moving to an easier version of the level (normally happens after waiting for a minute). Click the resume button. Confirm that the game is unpaused. 1.16. As a user , I want to be able to exit the game so that I can stop playing. Acceptance criteria: Open the Memory Game Click the pause button on the screen. Confirm that a prompt to exit the game appears. Click on the exit button. Confirm that the game exits. 1.17. As a user , I want to be able to mute or unmute sound so that I can play the game without any audible distractions. Acceptance criteria: Open the Memory Game Click the sound button on the screen. Confirm that the sound is muted. Click the sound button on the screen again. Confirm that the sound is unmuted. 1.18. As a user , I want to keep track of my game score so that I am aware of how well I am performing during each game. Acceptance criteria: Open the Memory Game. Confirm that a scoreboard appears on the screen. Confirm that the score increases by 10 when a match is made. Confirm that the score decreases by 2 when a match fails.","title":"1. User/Participant"},{"location":"requirements/#2-researcheradmin","text":"2.01. As a researcher , I want performance data to be collected using the Vibrant-Minds APIs so that I can view the statistics of all of the games in a central system. Acceptance criteria: Have users complete rounds of the Memory Game. Confirm that all of the statistics are sent to the server using the Vibrant-Minds APIs. (As opposed to some other method.) 2.02. As a researcher , I want to collect the ID of the participant so that I can identify the participant. Acceptance criteria: Have users complete rounds of the Memory Game. Confirm that the data received from these games includes the participant ID. 2.03. As a researcher , I want to collect the date and time of each game by participant ID so that I can determine when each user played each game. Acceptance criteria: Have users complete rounds of the Memory Game. Confirm that the data received from these games includes the date and time. 2.04. As a researcher , I want to know whether the game finished, so that I can check whether the user left partway through the game. Acceptance criteria: Have users complete rounds of the Memory Game. Confirm that the data received from these games includes an indicator that the game finished. Have users open the Memory Game, but close it without finishing the game. Confirm that the data received from these games includes an indicator that the game did not finish. 2.05. As a researcher , I want to know the start and finish times for each game, so that I can measure how much time the participant took. Acceptance criteria: Have users complete rounds of the Memory Game. Confirm that the data received from these games includes the start and finish times. 2.06. As a researcher , I want to track which difficulty level the participant reached, so that I can measure the level of their performance. Acceptance criteria: Have users complete rounds of the Memory Game. Confirm that the data received from these games includes the difficulty level reached. 2.07. As a researcher , I want to collect the number of correct and incorrect matches so that I can determine the accuracy in the user\u2019s play. Acceptance criteria: Have users complete rounds of the Memory Game. Confirm that the data received from these games includes the number of correct and incorrect matches. 2.08. As a researcher , I want to track the time when each click (or tap) occurs so that I can recognize the pace of their play and understand their cognitive functionality better. Acceptance criteria: Have users complete rounds of the Memory Game. Confirm that the data received from these games includes the time of each click. 2.09. As a researcher , I want to track the score for each game so that I can determine the accuracy in the user\u2019s play. Acceptance criteria: Have users complete rounds of the Memory Game. Confirm that the data received from these games includes the scores.","title":"2. Researcher/Admin"},{"location":"requirements/#3-technical-userdeveloper","text":"3.01. As a developer , I want the Memory Game code to be based on the Mahjong code, so that the code retains consistency between the games. Acceptance criteria: Confirm that we are starting with the Mahjong code and modifying it. Confirm that the final code structure bears resemblance to the Mahjong code. 3.02. As a developer , I want the card images to be easy to replace, so that we can swap them out when we draw higher quality assets. Acceptance criteria: Confirm that the image resources are in a separate directory from the game code. Confirm that replacing the image files replaces their appearances in-game.","title":"3. Technical User/Developer"},{"location":"requirements/#moscow-prioritization","text":"Must have: - 1.01, 1.02, 1.03, 1.04, 1.05, 1.09, 1.10, 1.13, 1.14, 2.01, 2.02, 2.03, 2.04 Should have: - 1.06, 1.07, 1.08, 1.11, 1.12, 1.15, 1.16, 1.17, 2.05, 2.06, 2.07, 2.08, 3.01, 3.02 Could have: - 1.18, 2.09 Won\u2019t do: - None. I think we should be able to complete all of the current requirements.","title":"MoSCoW Prioritization"}]}